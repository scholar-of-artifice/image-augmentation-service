# Define the named volumes for persistent storage
volumes:
  transactions_data: # this is a database for storing information about data transactions
  unprocessed_image_data: # use this for staging unprocessed/original files
  processed_image_data: # use this for storing processed/augmented files
services:
  # The FastAPI Application Service
  api:
    build:
      # This specifies the build context, which is
      # the directory containing all the files and folders
      # that will be sent to the Docker daemon for the build.
      # This includes your source code and, most importantly, the Dockerfile.
      # The dot is a universal shorthand in command-line environments
      # for the current directory.
      context: .
    ports:
      - "8000:8000"
    volumes:
      # Mount the image storage volume into the container
      # [source_of_data]:[some/file/path]
      - unprocessed_image_data:/image-augmentation-service/data/images/unprocessed
      - processed_image_data:/image-augmentation-service/data/images/processed
    # Give the built image a name
    image: image-augmentation-service-api:latest
    # Give the running container a name
    container_name: image-augmentation-api
  db:
    # The PostgreSQL Database Service to store transaction information
    image: postgres:16-alpine # Use the official PostgreSQL image
    volumes:
      # Mount the volume to persist the data
      - transactions_data:/var/lib/postgresql/data
    environment:
      # use the variables from the .env file
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    container_name: image-augmentation-transactions-db
  # TODO: add a persistence layer
  # TODO: add a PostgreSQL volume for transaction information
  # TODO: add a Images Volume for augmented images